/*
 * This file is generated by jOOQ.
 */
package org.dazai.booksourcing.auth.domain.db.tables.records;


import org.dazai.booksourcing.auth.domain.db.tables.Users;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DEFAULT_SCHEMA.users.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>DEFAULT_SCHEMA.users.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DEFAULT_SCHEMA.users.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>DEFAULT_SCHEMA.users.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DEFAULT_SCHEMA.users.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>DEFAULT_SCHEMA.users.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DEFAULT_SCHEMA.users.is_disabled</code>.
     */
    public void setIsDisabled(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>DEFAULT_SCHEMA.users.is_disabled</code>.
     */
    public Boolean getIsDisabled() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, String username, String password, Boolean isDisabled) {
        super(Users.USERS);

        setId(id);
        setUsername(username);
        setPassword(password);
        setIsDisabled(isDisabled);
        resetChangedOnNotNull();
    }
}
