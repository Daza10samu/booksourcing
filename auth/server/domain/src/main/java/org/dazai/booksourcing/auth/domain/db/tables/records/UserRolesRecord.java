/*
 * This file is generated by jOOQ.
 */
package org.dazai.booksourcing.auth.domain.db.tables.records;


import org.dazai.booksourcing.auth.domain.db.tables.UserRoles;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserRolesRecord extends UpdatableRecordImpl<UserRolesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DEFAULT_SCHEMA.user_roles.user_id</code>.
     */
    public void setUserId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>DEFAULT_SCHEMA.user_roles.user_id</code>.
     */
    public ULong getUserId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>DEFAULT_SCHEMA.user_roles.role</code>.
     */
    public void setRole(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>DEFAULT_SCHEMA.user_roles.role</code>.
     */
    public String getRole() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<ULong, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRolesRecord
     */
    public UserRolesRecord() {
        super(UserRoles.USER_ROLES);
    }

    /**
     * Create a detached, initialised UserRolesRecord
     */
    public UserRolesRecord(ULong userId, String role) {
        super(UserRoles.USER_ROLES);

        setUserId(userId);
        setRole(role);
        resetChangedOnNotNull();
    }
}
