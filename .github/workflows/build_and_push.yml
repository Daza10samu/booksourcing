name: Build, Push Docker Images and Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-main:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Custom Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Build and Push Main Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile_main
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.REGISTRY_URL }}/booksourcing-main:latest,${{ secrets.REGISTRY_URL }}/booksourcing-main:${{ github.sha }}

  build-auth:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Custom Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Build and Push Auth Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile_auth
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.REGISTRY_URL }}/booksourcing-auth:latest,${{ secrets.REGISTRY_URL }}/booksourcing-auth:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-main, build-auth]  # Указываем зависимость от сборки образов
    if: github.event_name != 'pull_request'  # Деплоим только при пуше в master или manual trigger

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            cd ./booksourcing
            REGISTRY_URL=${{ secrets.REGISTRY_URL }} docker compose pull
            REGISTRY_URL=${{ secrets.REGISTRY_URL }} docker compose up -d --force-recreate
